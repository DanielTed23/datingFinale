@page "/"
@inject DatingContext DbContext
@using Dating.Data.Models
@inject NavigationManager NavigationManager
@using Dating.Data.Services
@using Microsoft.EntityFrameworkCore
@inject SimpleAuthService SimpleAuthService

<PageTitle>Login</PageTitle>

<h3>Login </h3>


<EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
    <div class="form-group">
        <label for="userName">UsernName:</label>
        <InputText id="userName" @bind-Value="loginModel.UserName" class="form-control" />
    </div>
    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" @bind-Value="loginModel.Password" type="password" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Log ind</button>
</EditForm>


@if(loginFailed)
{
    <div class="alert alert-danger" role="alert">
        Login failed. Check UserName or Password.
    </div>
}
@code {
        // Definerer en instans af AccountProfile-modellen til at opbevare loginoplysninger.
private Data.Models.AccountProfile loginModel = new Data.Models.AccountProfile();

    // En boolsk variabel til at spore, om loginforsøget mislykkedes.
    private bool loginFailed = false;

    // Asynkron metode til at håndtere login-logik.
    private async Task HandleLogin()
    {
        // Forsøger at finde en bruger i databasen, der matcher både brugernavn og adgangskode.
        var user = await DbContext.Accounts
            .FirstOrDefaultAsync(u => u.UserName == loginModel.UserName && u.Password == loginModel.Password);

        if (user != null) // Tjekker, om der blev fundet en matchende bruger.
        {
            // Håndterer succesfuldt login ved at sætte den aktuelle bruger og loginstatus.
            SimpleAuthService.CurrentUser = user;
            SimpleAuthService.IsLoggedIn = true;

            // Omdirigerer brugeren til en anden side efter et succesfuldt login.
            NavigationManager.NavigateTo("/Account");
        }
        else // Hvis ingen bruger matcher de indtastede oplysninger.
        {
            // Sætter loginFailed til true for at indikere, at loginforsøget mislykkedes.
            loginFailed = true;
        }
    }
}